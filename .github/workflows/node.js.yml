# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    - run: npm lint
    - run: npm coverage
    - run: npm typescript
  
  deploy:
    - provider: s3
    access_key_id: "$DIGITAL_OCEAN_SPACES_KEY_ID"
    secret_access_key: "$DIGITAL_OCEAN_SPACES_ACCESS_KEY"
    bucket: "$DIGITAL_OCEAN_SPACES_BUCKET"
    endpoint: "$DIGITAL_OCEAN_SPACES_ENDPOINT"
    cache-control: "max-age=31536000"
    local_dir: dist
    skip_cleanup: true
    acl: public_read
    on:
      branch: master
  - provider: npm
    api_token: "$NPM_AUTH_TOKEN"
    edge: true
    on:
      tags: true
after_deploy:
  - >
    if [[ "$_BRANCH" == "master" ]]; then
      echo "Updating import map to point to new version of @openmrs/esm-patient-chart-widgets"
      statuscode=$(curl --output /dev/null --write-out %{http_code} -u $DEPLOYER_USERNAME:$DEPLOYER_PASSWORD -d '{ "service":"@openmrs/esm-patient-chart-widgets","url":"https://spa-modules.nyc3.digitaloceanspaces.com/@openmrs/esm-patient-chart-widgets/'$TRAVIS_COMMIT'/openmrs-esm-patient-chart-widgets.js" }' -X PATCH $DEPLOYER_HOST/services\?env=prod -H "Accept:application/json" -H "Content-Type:application/json")
      echo "Deployment Status Code --> ${statuscode}"
      if [ "$statuscode" -ne 200 ]; then travis_terminate "$statuscode"; fi
    fi
